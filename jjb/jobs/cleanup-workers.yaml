- job:
    name: "cleanup-workers"
    description: "cleanup pipeline workers at the end of pipeline"
    defaults: global
    scm:
      - tf-jenkins
    parameters:
      - label:
          name: NODE_NAME
      - string:
          name: STREAM 
      - string:
          name: JOB_RND
      - string:
          name: PIPELINE_NAME
      - string:
          name: PIPELINE_NUMBER
    wrappers:
      - workspace-cleanup:
          disable-deferred-wipeout: true
      - timestamps
    #   - credentials-binding:
    #       - amazon-web-services:
    #           credential-id: aws-creds
    #           access-key: AWS_ACCESS_KEY_ID
    #           secret-key: AWS_SECRET_ACCESS_KEY
      - credentials-binding:
          - text:
              credential-id: OS_USERNAME
              variable: OS_USERNAME
          - text:
              credential-id: OS_PROJECT_ID
              variable: OS_PROJECT_ID
          - text:
              credential-id: OS_PASSWORD
              variable: OS_PASSWORD
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_USER_DOMAIN_NAME
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_PROJECT_DOMAIN_NAME
          - text:
              credential-id: OS_AUTH_URL
              variable: OS_AUTH_URL
    builders:
      - copyartifact:
          project: ${PIPELINE_NAME}
          filter: "global.env"
          which-build: upstream-build
      - shell: |
          desc="Pipeline: ${PIPELINE_NAME}-${PIPELINE_NUMBER}"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          source "$WORKSPACE/global.env"
          ./src/opensdn-io/tf-jenkins/infra/gerrit/apply_patchsets.sh ./src tungstenfabric/tf-jenkins ./patchsets-info.json
      - shell: |
          source "$WORKSPACE/global.env"
          $WORKSPACE/src/opensdn-io/tf-jenkins/infra/${SLAVE}/cleanup_pipeline_workers.sh
