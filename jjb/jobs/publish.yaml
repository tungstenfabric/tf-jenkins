- job:
    name: "publish"
    description: "publish TF artifacts"
    defaults: global
    properties:
      - build-discarder:
          num-to-keep: 60
    concurrent: false
    scm:
      - tf-jenkins
      - tf-dev-env
    parameters:
      - label:
          name: NODE_NAME
      - string:
          name: STREAM 
      - string:
          name: JOB_RND
      - string:
          name: PIPELINE_NAME
      - string:
          name: PIPELINE_NUMBER
    wrappers:
      - workspace-cleanup:
          disable-deferred-wipeout: true
      - timestamps
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: worker
              key-file-variable: WORKER_SSH_KEY
              username-variable: WORKER_USER_NAME
              passphrase-variable: WORKER_PASSPHRASE
    #   - credentials-binding:
    #       - amazon-web-services:
    #           credential-id: aws-creds
    #           access-key: AWS_ACCESS_KEY_ID
    #           secret-key: AWS_SECRET_ACCESS_KEY
      - credentials-binding:
          - text:
              credential-id: OS_USERNAME
              variable: OS_USERNAME
          - text:
              credential-id: OS_PROJECT_ID
              variable: OS_PROJECT_ID
          - text:
              credential-id: OS_PASSWORD
              variable: OS_PASSWORD
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_USER_DOMAIN_NAME
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_PROJECT_DOMAIN_NAME
          - text:
              credential-id: OS_AUTH_URL
              variable: OS_AUTH_URL
      - credentials-binding:
          - username-password-separated:
              credential-id: dockerhub
              username: DOCKERHUB_USERNAME
              password: DOCKERHUB_PASSWORD
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: logs_host
              key-file-variable: LOGS_HOST_SSH_KEY
              username-variable: LOGS_HOST_USERNAME
    builders:
      - copyartifact:
          project: ${PIPELINE_NAME}
          filter: "global.env,*.$JOB_RND.env,patchsets-info.json"
          which-build: upstream-build
      - shell: |
          source "$WORKSPACE/global.env"
          desc="Pipeline: ${PIPELINE_NAME}-${PIPELINE_NUMBER}  Random: ${JOB_RND}<br>Job logs: <a href=\"${LOGS_URL}/${STREAM}\">${LOGS_URL}/${STREAM}</a>"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          set -eo pipefail
          source "$WORKSPACE/global.env"
          $WORKSPACE/src/opensdn-io/tf-jenkins/infra/gerrit/apply_patchsets.sh ./src tungstenfabric/tf-jenkins ./patchsets-info.json
          $WORKSPACE/src/opensdn-io/tf-jenkins/infra/gerrit/apply_patchsets.sh ./src tungstenfabric/tf-dev-env ./patchsets-info.json
      - shell: |
          source "$WORKSPACE/global.env"
          if [[ -n "$VERIFIED" ]] && (( VERIFIED < 1 )); then
            echo "ERROR: verified flag is not empty and equal to $VERIFIED. Skip this job"
            exit 1
          fi          
      - shell: |
          export ENVIRONMENT_OS=centos7
          source "$WORKSPACE/global.env"
          $WORKSPACE/src/opensdn-io/tf-jenkins/jobs/publish/create_workers.sh
      - shell: |
          set -eo pipefail
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/stackrc.$JOB_NAME.env"
          source "${WORKSPACE}/deps.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          # do it as a latest source to override all exports
          source "${WORKSPACE}/vars.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          export FULL_LOGS_PATH="${LOGS_PATH}/${STREAM}"
          # main run
          if (( VERIFIED > 0 )); then
            export STABLE=true
          fi
          $WORKSPACE/src/opensdn-io/tf-jenkins/jobs/publish/run.sh || res=1
          # collect logs
          $WORKSPACE/src/opensdn-io/tf-jenkins/jobs/publish/collect_logs.sh
          exit $res
    publishers:
      - postbuildscript:
          builders:
            - role: SLAVE
              build-on:
                - SUCCESS
                - FAILURE
                - ABORTED
                - NOT_BUILT
                - UNSTABLE
              build-steps:
                - shell: |
                    source "$WORKSPACE/global.env"
                    source "$WORKSPACE/stackrc.$JOB_NAME.env"
                    $WORKSPACE/src/opensdn-io/tf-jenkins/infra/${SLAVE}/remove_workers.sh
                    rm -f "$WORKSPACE/stackrc.$JOB_NAME.env"
      - archive:
          artifacts: '*.env'
