---

- job-template:
    name: "build-{build_job}"
    description: "{build_job}"
    defaults: global
    scm:
      - tf-jenkins
      - tf-dev-env
    parameters:
      - label:
          name: NODE_NAME
      - string:
          name: STREAM 
      - string:
          name: JOB_RND
      - string:
          name: PIPELINE_NAME
      - string:
          name: PIPELINE_NUMBER
    wrappers:
      - workspace-cleanup:
          disable-deferred-wipeout: true
      - timestamps
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: worker
              key-file-variable: WORKER_SSH_KEY
              username-variable: WORKER_USER_NAME
              passphrase-variable: WORKER_PASSPHRASE
      - credentials-binding:
          - amazon-web-services:
              credential-id: aws-creds
              access-key: AWS_ACCESS_KEY_ID
              secret-key: AWS_SECRET_ACCESS_KEY
      - credentials-binding:
          - text:
              credential-id: VEXX_OS_USERNAME
              variable: OS_USERNAME
          - text:
              credential-id: VEXX_OS_PROJECT_NAME
              variable: OS_PROJECT_NAME
          - text:
              credential-id: VEXX_OS_PASSWORD
              variable: OS_PASSWORD
          - text:
              credential-id: VEXX_OS_DOMAIN_NAME
              variable: OS_USER_DOMAIN_NAME
          - text:
              credential-id: VEXX_OS_DOMAIN_NAME
              variable: OS_PROJECT_DOMAIN_NAME
          - text:
              credential-id: VEXX_OS_AUTH_URL
              variable: OS_AUTH_URL
          - text:
              credential-id: RHEL_USER
              variable: RHEL_USER
          - text:
              credential-id: RHEL_PASSWORD
              variable: RHEL_PASSWORD
          - text:
              credential-id: RHEL_POOL_ID
              variable: RHEL_POOL_ID
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: logs_host
              key-file-variable: LOGS_HOST_SSH_KEY
              username-variable: LOGS_HOST_USERNAME
    builders:
      - copyartifact:
          project: ${{PIPELINE_NAME}}
          filter: "global.env,*.$JOB_RND.env,patchsets-info.json"
          which-build: upstream-build
          optional: true
      - shell: |
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/deps.$JOB_NAME.$JOB_RND.env" || /bin/true
          source "$WORKSPACE/vars.$JOB_NAME.$JOB_RND.env" || /bin/true
          desc="Pipeline: $PIPELINE_NAME-$PIPELINE_NUMBER  Random: $JOB_RND<br>"
          desc+="Stage: {stage}  Target: {target}<br>"
          desc+="Job logs: <a href=\"$LOGS_URL/$STREAM\">$LOGS_URL/$STREAM</a>"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          set -eo pipefail
          source "$WORKSPACE/global.env"
          ./src/tungstenfabric/tf-jenkins/infra/gerrit/apply_patchsets.sh ./src tungstenfabric/tf-jenkins ./patchsets-info.json
          ./src/tungstenfabric/tf-jenkins/infra/gerrit/apply_patchsets.sh ./src tungstenfabric/tf-dev-env ./patchsets-info.json
      - shell: |
          set -eo pipefail
          export STAGE={stage}
          export TARGET={target}
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/deps.$JOB_NAME.$JOB_RND.env" || /bin/true
          source "$WORKSPACE/vars.$JOB_NAME.$JOB_RND.env" || /bin/true

          if [[ "$STAGE" == 'none' ]]; then
            ./src/tungstenfabric/tf-jenkins/jobs/build/create_workers.sh
            # stackrc is present only in this run. next build jobs will inherit this ENV via deps.XXX file
            source "$WORKSPACE/stackrc.$JOB_NAME.env"
          elif [[ "$STAGE" == 'cleanup' ]]; then
            ./src/tungstenfabric/tf-jenkins/infra/$SLAVE/remove_workers.sh
            exit
          fi

          source ./src/tungstenfabric/tf-jenkins/infra/$SLAVE/definitions
          export FULL_LOGS_PATH="$LOGS_PATH/$STREAM"
          # main run
          ./src/tungstenfabric/tf-jenkins/jobs/build/run.sh || res=1
          ./src/tungstenfabric/tf-jenkins/jobs/build/collect_logs.sh
          exit $res
    publishers:
      - postbuildscript:
          builders:
            - role: SLAVE
              build-on:
                  - FAILURE
                  - ABORTED
                  - NOT_BUILT
                  - UNSTABLE
              build-steps:
                  - shell: |
                      source "$WORKSPACE/global.env"
                      source "$WORKSPACE/stackrc.$JOB_NAME.env" || /bin/true
                      source "$WORKSPACE/deps.$JOB_NAME.$JOB_RND.env" || /bin/true
                      source "$WORKSPACE/vars.$JOB_NAME.$JOB_RND.env" || /bin/true
                      ./src/tungstenfabric/tf-jenkins/infra/$SLAVE/remove_workers.sh
                      rm -f "$WORKSPACE/stackrc.$JOB_NAME.env"
      - archive:
          artifacts: '*.env'

- project:
    name: build
    build_job:
      - prepare-sandbox:
          stage: none
          target: ""
      - fetch-sources:
          stage: ""
          target: ""
      - package-deployers:
          stage: package
          target: src-containers
      - compile:
          stage: compile
          target: ""
      - package:
          stage: package
          target: ""
      - freeze:
          stage: freeze
          target: ""
      - cleanup:
          stage: cleanup
          target: ""
    jobs:
      - 'build-{build_job}'
