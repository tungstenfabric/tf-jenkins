---

- job:
    name: test-sanity
    description: "devstack test sanity"
    defaults: global
    parameters:
      - label:
          name: NODE_NAME
      - string:
          name: STREAM 
      - string:
          name: JOB_RND
      - string:
          name: PIPELINE_NAME
      - string:
          name: PIPELINE_NUMBER
    properties:
      - build-discarder:
          num-to-keep: 50
    wrappers:
      - workspace-cleanup:
          disable-deferred-wipeout: true
      - timestamps
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: worker
              key-file-variable: WORKER_SSH_KEY
              username-variable: WORKER_USER_NAME
              passphrase-variable: WORKER_PASSPHRASE
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: logs_host
              key-file-variable: LOGS_HOST_SSH_KEY
              username-variable: LOGS_HOST_USERNAME
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: openlab1
              key-file-variable: OPENLAB1_SSH_KEY
              username-variable: OPENLAB1_USER_NAME
              passphrase-variable: OPENLAB1_PASSPHRASE
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: openlab2
              key-file-variable: OPENLAB2_SSH_KEY
              username-variable: OPENLAB2_USER_NAME
              passphrase-variable: OPENLAB2_PASSPHRASE
    scm:
      - tf-jenkins
      - tf-dev-test
    builders:
      - copyartifact:
          project: ${PIPELINE_NAME}
          filter: "global.env,*.$JOB_RND.env,patchsets-info.json"
          which-build: upstream-build
      - shell: |
          source "$WORKSPACE/global.env"
          source "${WORKSPACE}/deps.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          desc="Pipeline: ${PIPELINE_NAME}-${PIPELINE_NUMBER}  Random: ${JOB_RND}  Stream: ${STREAM}"
          desc+="<br>Job logs: <a href=\"${LOGS_URL}/$JOB_LOGS_PATH\">${LOGS_URL}/$JOB_LOGS_PATH</a>"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          set +e -o pipefail
          source "$WORKSPACE/global.env"
          ./src/tungstenfabric/tf-jenkins/infra/gerrit/apply_patchsets.sh ./src tungstenfabric/tf-jenkins ./patchsets-info.json
          ./src/tungstenfabric/tf-jenkins/infra/gerrit/apply_patchsets.sh ./src tungstenfabric/tf-dev-test ./patchsets-info.json
      - shell: |
          set +e -o pipefail
          source "$WORKSPACE/global.env"
          source ./src/tungstenfabric/tf-jenkins/infra/${SLAVE}/definitions
          source "${WORKSPACE}/deps.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          # do it as a latest source to override all exports
          source "${WORKSPACE}/vars.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          export FULL_LOGS_PATH="$LOGS_PATH/$JOB_LOGS_PATH"
          echo "INFO: wait 120s before tests run - give some time to cluster"
          sleep 120
          ./src/tungstenfabric/tf-jenkins/jobs/test/sanity/run.sh || res=1
          exit $res
    publishers:
      - archive:
          artifacts: '*.env'
