---

- job:
    name: update-stage-repos
    description: "Update staged repos"
    defaults: global
    concurrent: false
    scm:
      - tf-jenkins
    parameters:
      - label:
          name: NODE_NAME
      - string:
          name: STREAM
      - string:
          name: JOB_RND
      - string:
          name: PIPELINE_NAME
      - string:
          name: PIPELINE_NUMBER
    wrappers:
      - workspace-cleanup:
          disable-deferred-wipeout: true
      - timestamps
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: worker
              key-file-variable: WORKER_SSH_KEY
              username-variable: WORKER_USER_NAME
              passphrase-variable: WORKER_PASSPHRASE
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: tf-mirrors
              key-file-variable: REPOUPDATER_SSH_KEY
              username-variable: REPOUPDATER_USER_NAME
              passphrase-variable: REPOUPDATER_PASSPHRASE
    #   - credentials-binding:
    #       - amazon-web-services:
    #           credential-id: aws-creds
    #           access-key: AWS_ACCESS_KEY_ID
    #           secret-key: AWS_SECRET_ACCESS_KEY
      - credentials-binding:
          - text:
              credential-id: OS_USERNAME
              variable: OS_USERNAME
          - text:
              credential-id: OS_PROJECT_ID
              variable: OS_PROJECT_ID
          - text:
              credential-id: OS_PASSWORD
              variable: OS_PASSWORD
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_USER_DOMAIN_NAME
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_PROJECT_DOMAIN_NAME
          - text:
              credential-id: OS_AUTH_URL
              variable: OS_AUTH_URL
        #   - username-password-separated:
        #       credential-id: rhel-creds
        #       username: RHEL_USER
        #       password: RHEL_PASSWORD
    builders:
      - copyartifact:
          project: ${PIPELINE_NAME}
          filter: "global.env,*.$JOB_RND.env,patchsets-info.json"
          which-build: upstream-build
          optional: true
      - shell: |
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/deps.$JOB_NAME.$JOB_RND.env" || /bin/true
          source "$WORKSPACE/vars.$JOB_NAME.$JOB_RND.env" || /bin/true
          desc="Pipeline: $PIPELINE_NAME-$PIPELINE_NUMBER  Random: $JOB_RND<br>"
          desc+="Stage: {stage}  Target: {target}<br>"
          desc+="Job logs: <a href=\"$LOGS_URL/$STREAM\">$LOGS_URL/$STREAM</a>"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/deps.$JOB_NAME.$JOB_RND.env" || /bin/true
          source "$WORKSPACE/vars.$JOB_NAME.$JOB_RND.env" || /bin/true
          echo "INFO: do repos update for repo $REPOS_TYPE"
          $WORKSPACE/src/opensdn-io/tf-jenkins/jobs/update-stage-repos/run.sh
    publishers:
      - archive:
          artifacts: '*.env'

- job:
    name: publish-stage-repos
    description: "Publish staged repos"
    defaults: global
    concurrent: false
    scm:
      - tf-jenkins
    parameters:
      - label:
          name: NODE_NAME
      - string:
          name: STREAM
      - string:
          name: JOB_RND
      - string:
          name: PIPELINE_NAME
      - string:
          name: PIPELINE_NUMBER
    wrappers:
      - workspace-cleanup:
          disable-deferred-wipeout: true
      - timestamps
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: worker
              key-file-variable: WORKER_SSH_KEY
              username-variable: WORKER_USER_NAME
              passphrase-variable: WORKER_PASSPHRASE
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: tf-mirrors
              key-file-variable: REPOUPDATER_SSH_KEY
              username-variable: REPOUPDATER_USER_NAME
              passphrase-variable: REPOUPDATER_PASSPHRASE
    #   - credentials-binding:
    #       - amazon-web-services:
    #           credential-id: aws-creds
    #           access-key: AWS_ACCESS_KEY_ID
    #           secret-key: AWS_SECRET_ACCESS_KEY
      - credentials-binding:
          - text:
              credential-id: OS_USERNAME
              variable: OS_USERNAME
          - text:
              credential-id: OS_PROJECT_ID
              variable: OS_PROJECT_ID
          - text:
              credential-id: OS_PASSWORD
              variable: OS_PASSWORD
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_USER_DOMAIN_NAME
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_PROJECT_DOMAIN_NAME
          - text:
              credential-id: OS_AUTH_URL
              variable: OS_AUTH_URL
    builders:
      - copyartifact:
          project: ${PIPELINE_NAME}
          filter: "global.env,*.$JOB_RND.env,patchsets-info.json"
          which-build: upstream-build
          optional: true
      - shell: |
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/deps.$JOB_NAME.$JOB_RND.env" || /bin/true
          source "$WORKSPACE/vars.$JOB_NAME.$JOB_RND.env" || /bin/true
          desc="Pipeline: $PIPELINE_NAME-$PIPELINE_NUMBER  Random: $JOB_RND<br>"
          desc+="Stage: {stage}  Target: {target}<br>"
          desc+="Job logs: <a href=\"$LOGS_URL/$STREAM\">$LOGS_URL/$STREAM</a>"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/deps.$JOB_NAME.$JOB_RND.env" || /bin/true
          source "$WORKSPACE/vars.$JOB_NAME.$JOB_RND.env" || /bin/true
          echo "INFO: publish checked repo as latest "
          $WORKSPACE/src/opensdn-io/tf-jenkins/jobs/update-stage-repos/publish.sh
    publishers:
      - archive:
          artifacts: '*.env'
