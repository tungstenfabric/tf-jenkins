---

- job:
    name: update-stage-images
    description: "Update staged docker images"
    defaults: global
    concurrent: false
    scm:
      - tf-jenkins
      - tf-dev-env
    parameters:
      - label:
          name: NODE_NAME
      - string:
          name: STREAM
      - string:
          name: JOB_RND
      - string:
          name: PIPELINE_NAME
      - string:
          name: PIPELINE_NUMBER
    wrappers:
      - workspace-cleanup:
          disable-deferred-wipeout: true
      - timestamps
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: worker
              key-file-variable: WORKER_SSH_KEY
              username-variable: WORKER_USER_NAME
              passphrase-variable: WORKER_PASSPHRASE
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: tf-mirrors
              key-file-variable: REPOUPDATER_SSH_KEY
              username-variable: REPOUPDATER_USER_NAME
              passphrase-variable: REPOUPDATER_PASSPHRASE
      - credentials-binding:
          - text:
              credential-id: OS_USERNAME
              variable: OS_USERNAME
          - text:
              credential-id: OS_PROJECT_ID
              variable: OS_PROJECT_ID
          - text:
              credential-id: OS_PASSWORD
              variable: OS_PASSWORD
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_USER_DOMAIN_NAME
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_PROJECT_DOMAIN_NAME
          - text:
              credential-id: OS_AUTH_URL
              variable: OS_AUTH_URL
        #   - username-password-separated:
        #       credential-id: rhel-creds
        #       username: RHEL_USER
        #       password: RHEL_PASSWORD

    builders:
      - copyartifact:
          project: ${PIPELINE_NAME}
          filter: "global.env,*.$JOB_RND.env,patchsets-info.json"
          which-build: upstream-build
          optional: true
      - shell: |
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/deps.$JOB_NAME.$JOB_RND.env" || /bin/true
          source "$WORKSPACE/vars.$JOB_NAME.$JOB_RND.env" || /bin/true
          desc="Pipeline: $PIPELINE_NAME-$PIPELINE_NUMBER  Random: $JOB_RND<br>"
          desc+="Repos type: $REPOS_TYPE<br>"
          desc+="Job logs: <a href=\"$LOGS_URL/$STREAM\">$LOGS_URL/$STREAM</a>"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          export ENVIRONMENT_OS=centos7
          source "$WORKSPACE/global.env"
          $WORKSPACE/src/opensdn-io/tf-jenkins/jobs/update-stage-images/create_workers.sh
      - shell: |
          set -eo pipefail
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/stackrc.$JOB_NAME.env"
          source "${WORKSPACE}/deps.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          # do it as a latest source to override all exports
          source "${WORKSPACE}/vars.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          echo "INFO: pull rhosp docker images and tag them as staging "
          $WORKSPACE/src/opensdn-io/tf-jenkins/jobs/update-stage-images/run.sh
    publishers:
      - postbuildscript:
          builders:
            - role: SLAVE
              build-on:
                - SUCCESS
                - FAILURE
                - ABORTED
                - NOT_BUILT
                - UNSTABLE
              build-steps:
                - shell: |
                    source "$WORKSPACE/global.env"
                    source "$WORKSPACE/stackrc.$JOB_NAME.env"
                    $WORKSPACE/src/opensdn-io/tf-jenkins/infra/${SLAVE}/remove_workers.sh
                    rm -f "$WORKSPACE/stackrc.$JOB_NAME.env"
      - archive:
          artifacts: '*.env'

- job:
    name: publish-stage-images
    description: "Publish staged images"
    defaults: global
    concurrent: false
    scm:
      - tf-jenkins
      - tf-dev-env
    parameters:
      - label:
          name: NODE_NAME
      - string:
          name: STREAM
      - string:
          name: JOB_RND
      - string:
          name: PIPELINE_NAME
      - string:
          name: PIPELINE_NUMBER
    wrappers:
      - workspace-cleanup:
          disable-deferred-wipeout: true
      - timestamps
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: worker
              key-file-variable: WORKER_SSH_KEY
              username-variable: WORKER_USER_NAME
              passphrase-variable: WORKER_PASSPHRASE
      - credentials-binding:
          - ssh-user-private-key:
              credential-id: tf-mirrors
              key-file-variable: REPOUPDATER_SSH_KEY
              username-variable: REPOUPDATER_USER_NAME
              passphrase-variable: REPOUPDATER_PASSPHRASE
      - credentials-binding:
          - text:
              credential-id: OS_USERNAME
              variable: OS_USERNAME
          - text:
              credential-id: OS_PROJECT_ID
              variable: OS_PROJECT_ID
          - text:
              credential-id: OS_PASSWORD
              variable: OS_PASSWORD
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_USER_DOMAIN_NAME
          - text:
              credential-id: OS_DOMAIN_NAME
              variable: OS_PROJECT_DOMAIN_NAME
          - text:
              credential-id: OS_AUTH_URL
              variable: OS_AUTH_URL

    builders:
      - copyartifact:
          project: ${PIPELINE_NAME}
          filter: "global.env,*.$JOB_RND.env,patchsets-info.json"
          which-build: upstream-build
          optional: true
      - shell: |
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/deps.$JOB_NAME.$JOB_RND.env" || /bin/true
          source "$WORKSPACE/vars.$JOB_NAME.$JOB_RND.env" || /bin/true
          desc="Pipeline: $PIPELINE_NAME-$PIPELINE_NUMBER  Random: $JOB_RND<br>"
          desc+="Repos type: $REPOS_TYPE<br>"
          desc+="Job logs: <a href=\"$LOGS_URL/$STREAM\">$LOGS_URL/$STREAM</a>"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          export ENVIRONMENT_OS=centos7
          source "$WORKSPACE/global.env"
          $WORKSPACE/src/opensdn-io/tf-jenkins/jobs/update-stage-images/create_workers.sh
      - shell: |
          set -eo pipefail
          source "$WORKSPACE/global.env"
          source "$WORKSPACE/stackrc.$JOB_NAME.env"
          source "${WORKSPACE}/deps.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          # do it as a latest source to override all exports
          source "${WORKSPACE}/vars.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          echo "INFO: tag all rhosp images as latest"
          $WORKSPACE/src/opensdn-io/tf-jenkins/jobs/update-stage-images/publish.sh
    publishers:
      - postbuildscript:
          builders:
            - role: SLAVE
              build-on:
                - SUCCESS
                - FAILURE
                - ABORTED
                - NOT_BUILT
                - UNSTABLE
              build-steps:
                - shell: |
                    source "$WORKSPACE/global.env"
                    source "$WORKSPACE/stackrc.$JOB_NAME.env"
                    $WORKSPACE/src/opensdn-io/tf-jenkins/infra/${SLAVE}/remove_workers.sh
                    rm -f "$WORKSPACE/stackrc.$JOB_NAME.env"
      - archive:
          artifacts: '*.env'
